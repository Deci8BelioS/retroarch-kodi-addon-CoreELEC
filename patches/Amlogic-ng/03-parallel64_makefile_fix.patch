diff --git a/packages/lakka/libretro_cores/parallel_n64/package.mk b/packages/lakka/libretro_cores/parallel_n64/package.mk
index 2b3954a4a4..60a1074163 100644
--- a/packages/lakka/libretro_cores/parallel_n64/package.mk
+++ b/packages/lakka/libretro_cores/parallel_n64/package.mk
@@ -1,5 +1,5 @@
 PKG_NAME="parallel_n64"
-PKG_VERSION="b804ab1a199d6ff1f8fef4aa7dfcf663990e430b"
+PKG_VERSION="28ef8ff960efef4fc3c462ddc52707e140fee3be"
 PKG_LICENSE="GPLv2"
 PKG_SITE="https://github.com/libretro/parallel-n64"
 PKG_URL="${PKG_SITE}.git"
@@ -7,44 +7,11 @@ PKG_DEPENDS_TARGET="toolchain"
 PKG_LONGDESC="Optimized/rewritten Nintendo 64 emulator made specifically for Libretro. Originally based on Mupen64 Plus."
 PKG_TOOLCHAIN="make"
 
-PKG_MAKE_OPTS_TARGET="HAVE_PARALLEL=1"
-
-if [ "${ARCH}" = "i386" ]; then
-  PKG_MAKE_OPTS_TARGET+=" WITH_DYNAREC=x86"
-else
-  PKG_MAKE_OPTS_TARGET+=" WITH_DYNAREC=${ARCH}"
-fi
-
-if [ "${OPENGL_SUPPORT}" = "yes" ]; then
-  PKG_DEPENDS_TARGET+=" ${OPENGL}"
-else
-  PKG_MAKE_OPTS_TARGET+=" HAVE_OPENGL=0"
-fi
-
-if [ "${OPENGLES_SUPPORT}" = "yes" ]; then
-  PKG_DEPENDS_TARGET+=" ${OPENGLES}"
-  PKG_MAKE_OPTS_TARGET+=" FORCE_GLES=1"
-fi
-
-if [ "${VULKAN_SUPPORT}" = "yes" ]; then
-  PKG_DEPENDS_TARGET+=" ${VULKAN}"
-fi
-
-if [ "${PROJECT}" = "Generic" ]; then
-  PKG_MAKE_OPTS_TARGET+=" HAVE_PARALLEL_RSP=1 HAVE_THR_AL=1"
+PKG_MAKE_OPTS_TARGET=" platform=${DEVICE}"
+if [ "${DEVICE}" == "OdroidGoAdvance" ]; then
+  PKG_MAKE_OPTS_TARGET=" platform=Odroidgoa"
 fi
 
-pre_make_target() {
-  if [ "${ARCH}" = "arm" -o "${ARCH}" = "aarch64" ]; then
-    CFLAGS+=" -DARM_FIX -fcommon"
-  fi
-
-  if target_has_feature neon ; then
-    CFLAGS+=" -DGL_BGRA_EXT=0x80E1" # Fix build for platforms where GL_BGRA_EXT is not defined
-    [ "${ARCH}" = "arm" ] && PKG_MAKE_OPTS_TARGET+=" platform=armv-neon" || true
-  fi
-}
-
 makeinstall_target() {
   mkdir -p ${INSTALL}/usr/lib/libretro
     cp -v parallel_n64_libretro.so ${INSTALL}/usr/lib/libretro/
diff --git a/packages/lakka/libretro_cores/parallel_n64/patches/parallel64_fix_amlogic.patch b/packages/lakka/libretro_cores/parallel_n64/patches/parallel64_fix_amlogic.patch
new file mode 100644
index 0000000000..75a73fe1bf
--- /dev/null
+++ b/packages/lakka/libretro_cores/parallel_n64/patches/parallel64_fix_amlogic.patch
@@ -0,0 +1,64 @@
+diff --git a/Makefile b/Makefile
+index 43652cee..777588dc 100644
+--- a/Makefile
++++ b/Makefile
+@@ -285,6 +285,59 @@ else ifneq (,$(findstring imx6,$(platform)))
+    WITH_DYNAREC=arm
+    HAVE_NEON=1
+
++# Amlogic
++else ifneq (,$(findstring AMLG,$(platform)))
++   TARGET := $(TARGET_NAME)_libretro.so
++   LDFLAGS += -shared -Wl,--version-script=$(LIBRETRO_DIR)/link.T
++   fpic = -fPIC
++   GLES = 1
++   GL_LIB := -lGLESv2
++   CPUFLAGS += -DNO_ASM -DARM -D__arm__ -DARM_ASM -D__NEON_OPT -DNOSSE -DARM_FIX -DCLASSIC
++   PLATFORM_EXT := unix
++   WITH_DYNAREC=arm
++   HAVE_NEON=1
++
++	ifneq (,$(findstring AMLG12,$(platform)))
++		ASFLAGS += -D__ARM_NEON__ -marm -mcpu=cortex-a73 -mtune=cortex-a73.cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard
++	else
++		ASFLAGS += -D__ARM_NEON__ -marm -mcpu=cortex-a53 -mtune=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard
++	endif
++
++   CPUFLAGS += -O2 \
++      -fno-lto -fuse-linker-plugin -fno-semantic-interposition -fno-trapping-math \
++      -fdata-sections -ffunction-sections -Wl,--gc-sections \
++      -fno-stack-protector -fno-ident -fomit-frame-pointer \
++      -falign-functions=32 -falign-jumps=1 -falign-loops=1 \
++      -fno-unwind-tables -fno-asynchronous-unwind-tables -fno-unroll-loops \
++      -fno-strict-aliasing -fmerge-all-constants -fno-math-errno
++	ifneq (,$(findstring AMLG12,$(platform)))
++		CPUFLAGS += -marm -mtune=cortex-a73.cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard
++	else
++		CPUFLAGS += -marm -mtune=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard
++	endif
++
++# OdroidGoA
++else ifneq (,$(findstring Odroidgoa,$(platform)))
++   TARGET := $(TARGET_NAME)_libretro.so
++   LDFLAGS += -shared -Wl,--version-script=$(LIBRETRO_DIR)/link.T
++   fpic = -fPIC
++   GLES = 1
++   GL_LIB := -lGLESv2
++   CPUFLAGS += -DNO_ASM -DARM -D__arm__ -DARM_ASM -D__NEON_OPT -DNOSSE -DARM_FIX -DCLASSIC
++   PLATFORM_EXT := unix
++   WITH_DYNAREC=arm
++   HAVE_NEON=1
++   ASFLAGS += -D__ARM_NEON__ -marm -mcpu=cortex-a35 -mtune=cortex-a35 -mfpu=neon-fp-armv8 -mfloat-abi=hard
++
++   CPUFLAGS += -O2 \
++      -fno-lto -fuse-linker-plugin -fno-semantic-interposition -fno-trapping-math \
++      -fdata-sections -ffunction-sections -Wl,--gc-sections \
++      -fno-stack-protector -fno-ident -fomit-frame-pointer \
++      -falign-functions=32 -falign-jumps=1 -falign-loops=1 \
++      -fno-unwind-tables -fno-asynchronous-unwind-tables -fno-unroll-loops \
++      -fno-strict-aliasing -fmerge-all-constants -fno-math-errno
++   CPUFLAGS += -marm -mtune=cortex-a35 -mfpu=neon-fp-armv8 -mfloat-abi=hard
++
+ # OS X
+ else ifneq (,$(findstring osx,$(platform)))
+    TARGET := $(TARGET_NAME)_libretro.dylib
