diff --git a/packages/lakka/libretro_cores/ppsspp/package.mk b/packages/lakka/libretro_cores/ppsspp/package.mk
index c21cf55beb..a6d6dca990 100644
--- a/packages/lakka/libretro_cores/ppsspp/package.mk
+++ b/packages/lakka/libretro_cores/ppsspp/package.mk
@@ -42,10 +42,14 @@ if [ "${OPENGL_SUPPORT}" = "no" -a "${OPENGLES_SUPPORT}" = "yes" ]; then
   PKG_CMAKE_OPTS_TARGET+=" -DUSING_GLES2=ON"
 fi
 
+if [ "${DEVICE}" = AMLGX ]; then
+  PKG_CMAKE_OPTS_TARGET+=" -DUSING_FBDEV=ON -DUSING_X11_VULKAN:BOOL=OFF"
+fi
+
 if [ "${TARGET_ARCH}" = "arm" ]; then
-  PKG_CMAKE_OPTS_TARGET+=" -DARMV7=ON"
+  PKG_CMAKE_OPTS_TARGET+=" -DFORCED_CPU=armv8"
 elif [ "${TARGET_ARCH}" = "aarch64" ]; then
-  PKG_CMAKE_OPTS_TARGET+=" -DARM64=ON"
+  PKG_CMAKE_OPTS_TARGET+=" -DFORCED_CPU=aarch64"
 fi
 
 pre_make_target() {
diff --git a/packages/lakka/libretro_cores/ppsspp/patches/01.armv8.patch b/packages/lakka/libretro_cores/ppsspp/patches/01.armv8.patch
new file mode 100755
index 0000000000..1a7ce273d8
--- /dev/null
+++ b/packages/lakka/libretro_cores/ppsspp/patches/01.armv8.patch
@@ -0,0 +1,33 @@
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index 90cd57ace..2ace6b70a 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -58,6 +58,10 @@ if(CMAKE_SYSTEM_PROCESSOR)
+ 				set(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} -target armv7a-none-linux-android")
+ 			endif()
+ 		endif()
++		if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "^armv8")
++			add_compile_options(-march=armv8-a+crc -mtune=cortex-a53 -mfloat-abi=hard -mfpu=neon-fp-armv8 -fomit-frame-pointer)
++			add_definitions(-DPPSSPP_ARCH_ARM_NEON=1 -DPPSSPP_ARCH_ARMV8=1)
++		endif()
+ 	elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "^amd64" OR ${CMAKE_SYSTEM_PROCESSOR} MATCHES "^x86_64" OR ${CMAKE_SYSTEM_PROCESSOR} MATCHES "^AMD64")
+ 		set(X86_DEVICE ON)
+ 		set(X86_64_DEVICE ON)
+diff --git a/Common/ArmCPUDetect.cpp b/Common/ArmCPUDetect.cpp
+index 437bd3158..d46cf19db 100644
+--- a/Common/ArmCPUDetect.cpp
++++ b/Common/ArmCPUDetect.cpp
+@@ -337,6 +337,13 @@ void CPUInfo::Detect()
+ 	bNEON = true;
+ 	bASIMD = true;
+ #endif
++
++#if PPSSPP_ARCH(ARMV8)
++	bNEON = true;
++	bASIMD = true;
++	bFP = true;
++#endif
++
+ }
+
+ // Turn the cpu info into a string we can show
